<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= errStatus %> - Error</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #FF5A5F 0%, #fff 100%);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        .container {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            position: relative;
            z-index: 10;
            padding: 20px;
        }

        .floating-shapes {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .shape {
            position: absolute;
            opacity: 0.1;
            animation: float 20s infinite ease-in-out;
        }

        .shape:nth-child(odd) {
            animation-direction: reverse;
        }

        .shape.circle {
            border-radius: 50%;
            background: #FF5A5F;
        }

        .shape.square {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(45deg);
        }

        .shape.triangle {
            width: 0;
            height: 0;
            background: transparent;
            border-left: 25px solid transparent;
            border-right: 25px solid transparent;
            border-bottom: 50px solid rgba(255, 90, 95, 0.3);
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            25% { transform: translateY(-20px) rotate(90deg); }
            50% { transform: translateY(-40px) rotate(180deg); }
            75% { transform: translateY(-20px) rotate(270deg); }
        }

        .main-content {
            position: relative;
            z-index: 10;
        }

        .error-code {
            font-size: clamp(8rem, 20vw, 16rem);
            font-weight: 900;
            color: #FF5A5F;
            text-shadow: 0 0 50px rgba(255, 90, 95, 0.5);
            margin-bottom: 20px;
            animation: glow 2s ease-in-out infinite alternate;
            background: linear-gradient(45deg, #FF5A5F, #fff, #FF5A5F);
            background-size: 300% 300%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: glow 2s ease-in-out infinite alternate, gradient 3s ease infinite;
        }

        @keyframes glow {
            from { text-shadow: 0 0 20px rgba(255, 90, 95, 0.5); }
            to { text-shadow: 0 0 40px rgba(255, 90, 95, 0.8), 0 0 60px rgba(255, 90, 95, 0.4); }
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .title {
            font-size: clamp(2rem, 5vw, 3.5rem);
            color: #fff;
            margin-bottom: 20px;
            font-weight: 300;
            letter-spacing: 2px;
            text-shadow: 0 2px 20px rgba(0, 0, 0, 0.3);
            animation: slideInUp 1s ease-out 0.5s both;
        }

        .subtitle {
            font-size: clamp(1rem, 2.5vw, 1.5rem);
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 40px;
            font-weight: 300;
            line-height: 1.6;
            animation: slideInUp 1s ease-out 0.7s both;
        }

        @keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .btn-home {
            display: inline-block;
            padding: 15px 40px;
            background: linear-gradient(135deg, #fff, #FF5A5F);
            color: #FF5A5F;
            text-decoration: none;
            border-radius: 50px;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            box-shadow: 0 10px 30px rgba(255, 90, 95, 0.3);
            animation: slideInUp 1s ease-out 0.9s both;
            position: relative;
            overflow: hidden;
        }

        .btn-home:before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            transition: left 0.5s;
        }

        .btn-home:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(255, 90, 95, 0.4);
            color: #fff;
            background: linear-gradient(135deg, #FF5A5F, #fff);
        }

        .btn-home:hover:before {
            left: 100%;
        }

        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 2;
        }

        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            animation: particleFloat 15s infinite linear;
        }

        @keyframes particleFloat {
            0% {
                transform: translateY(100vh) translateX(0);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-100px) translateX(100px);
                opacity: 0;
            }
        }

        .decorative-element {
            position: absolute;
            width: 200px;
            height: 200px;
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            animation: rotate 20s linear infinite;
        }

        .decorative-element:before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 150px;
            height: 150px;
            border: 2px solid rgba(255, 90, 95, 0.3);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            animation: rotate 15s linear infinite reverse;
        }

        .decorative-element:after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 100px;
            height: 100px;
            border: 2px solid rgba(255, 255, 255, 0.4);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            animation: rotate 10s linear infinite;
        }

        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .decorative-element.top-left {
            top: 10%;
            left: 10%;
        }

        .decorative-element.bottom-right {
            bottom: 10%;
            right: 10%;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 40px 20px;
            }
            
            .decorative-element {
                width: 150px;
                height: 150px;
            }
            
            .decorative-element:before {
                width: 100px;
                height: 100px;
            }
            
            .decorative-element:after {
                width: 50px;
                height: 50px;
            }
        }

        @media (max-width: 480px) {
            .btn-home {
                padding: 12px 30px;
                font-size: 1rem;
            }
            
            .decorative-element {
                display: none;
            }
        }

        /* Glitch effect for extra creativity */
        .glitch {
            position: relative;
            animation: glitch 2s infinite;
        }

        @keyframes glitch {
            0%, 100% { transform: translate(0); }
            20% { transform: translate(-2px, 2px); }
            40% { transform: translate(-2px, -2px); }
            60% { transform: translate(2px, 2px); }
            80% { transform: translate(2px, -2px); }
        }
    </style>
</head>
<body>
    <div class="floating-shapes" id="shapes"></div>
    <div class="particles" id="particles"></div>
    
    <div class="decorative-element top-left"></div>
    <div class="decorative-element bottom-right"></div>
    
    <div class="container">
        <div class="main-content">
            <div class="error-code glitch"><%= errStatus %></div>
            <h1 class="title"><%= errMessage %></h1>
            <a href="<%= link %>" class="btn-home" onclick="goHome()">Take Me Home</a>
        </div>
    </div>

    <script>
        // Create floating shapes
        function createShapes() {
            const shapesContainer = document.getElementById('shapes');
            const shapeTypes = ['circle', 'square', 'triangle'];
            
            for (let i = 0; i < 15; i++) {
                const shape = document.createElement('div');
                const shapeType = shapeTypes[Math.floor(Math.random() * shapeTypes.length)];
                
                shape.className = `shape ${shapeType}`;
                
                if (shapeType !== 'triangle') {
                    const size = Math.random() * 60 + 20;
                    shape.style.width = size + 'px';
                    shape.style.height = size + 'px';
                }
                
                shape.style.left = Math.random() * 100 + '%';
                shape.style.top = Math.random() * 100 + '%';
                shape.style.animationDelay = Math.random() * 20 + 's';
                shape.style.animationDuration = (Math.random() * 10 + 15) + 's';
                
                shapesContainer.appendChild(shape);
            }
        }

        // Create floating particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            
            for (let i = 0; i < 50; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 15 + 's';
                particle.style.animationDuration = (Math.random() * 10 + 10) + 's';
                
                particlesContainer.appendChild(particle);
            }
        }

        // Mouse movement effect
        document.addEventListener('mousemove', (e) => {
            const cursor = document.createElement('div');
            cursor.style.position = 'absolute';
            cursor.style.left = e.clientX + 'px';
            cursor.style.top = e.clientY + 'px';
            cursor.style.width = '4px';
            cursor.style.height = '4px';
            cursor.style.background = 'rgba(255, 90, 95, 0.6)';
            cursor.style.borderRadius = '50%';
            cursor.style.pointerEvents = 'none';
            cursor.style.zIndex = '1000';
            cursor.style.animation = 'fadeOut 1s ease-out forwards';
            
            document.body.appendChild(cursor);
            
            setTimeout(() => {
                if (cursor.parentNode) {
                    cursor.parentNode.removeChild(cursor);
                }
            }, 1000);
        });

        // Add fadeOut animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes fadeOut {
                from {
                    opacity: 1;
                    transform: scale(1);
                }
                to {
                    opacity: 0;
                    transform: scale(0);
                }
            }
        `;
        document.head.appendChild(style);

        function goHome() {
            // Add a smooth transition effect before redirecting
            document.body.style.transition = 'opacity 0.5s ease-out';
            document.body.style.opacity = '0';
            
            setTimeout(() => {
                window.history.back() || (window.location.href = '/');
            }, 500);
        }

        // Initialize
        createShapes();
        createParticles();

        // Add some interactive elements
        document.addEventListener('click', (e) => {
            if (e.target.tagName !== 'A') {
                const ripple = document.createElement('div');
                ripple.style.position = 'absolute';
                ripple.style.left = e.clientX + 'px';
                ripple.style.top = e.clientY + 'px';
                ripple.style.width = '0px';
                ripple.style.height = '0px';
                ripple.style.border = '2px solid rgba(255, 90, 95, 0.6)';
                ripple.style.borderRadius = '50%';
                ripple.style.pointerEvents = 'none';
                ripple.style.zIndex = '1000';
                ripple.style.animation = 'ripple 0.6s ease-out forwards';
                
                document.body.appendChild(ripple);
                
                setTimeout(() => {
                    if (ripple.parentNode) {
                        ripple.parentNode.removeChild(ripple);
                    }
                }, 600);
            }
        });

        // Add ripple animation
        const rippleStyle = document.createElement('style');
        rippleStyle.textContent = `
            @keyframes ripple {
                from {
                    width: 0px;
                    height: 0px;
                    opacity: 1;
                    transform: translate(-50%, -50%);
                }
                to {
                    width: 100px;
                    height: 100px;
                    opacity: 0;
                    transform: translate(-50%, -50%);
                }
            }
        `;
        document.head.appendChild(rippleStyle);
    </script>
</body>
</html>